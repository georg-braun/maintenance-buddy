// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using maintenance_buddy_api;

#nullable disable

namespace maintenance_buddy_api.Migrations
{
    [DbContext(typeof(VehicleContext))]
    partial class VehicleContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("maintenance_buddy_api.domain.ActionTemplate", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<int>("KilometerInterval")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<TimeSpan>("TimeInterval")
                        .HasColumnType("interval");

                    b.Property<Guid?>("VehicleId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("VehicleId");

                    b.ToTable("ActionTemplate");
                });

            modelBuilder.Entity("maintenance_buddy_api.domain.MaintenanceAction", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<Guid>("ActionTemplateId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("Kilometer")
                        .HasColumnType("integer");

                    b.Property<string>("Note")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ActionTemplateId");

                    b.ToTable("MaintenanceAction");
                });

            modelBuilder.Entity("maintenance_buddy_api.domain.Vehicle", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("Kilometer")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Vehicles");
                });

            modelBuilder.Entity("maintenance_buddy_api.infrastructure.database_model.UserVehicleConnection", b =>
                {
                    b.Property<string>("NameIdentifier")
                        .HasColumnType("text");

                    b.Property<Guid>("VehicleId")
                        .HasColumnType("uuid");

                    b.HasKey("NameIdentifier", "VehicleId");

                    b.ToTable("UserVehicleConnections");
                });

            modelBuilder.Entity("maintenance_buddy_api.domain.ActionTemplate", b =>
                {
                    b.HasOne("maintenance_buddy_api.domain.Vehicle", null)
                        .WithMany("ActionTemplates")
                        .HasForeignKey("VehicleId");
                });

            modelBuilder.Entity("maintenance_buddy_api.domain.MaintenanceAction", b =>
                {
                    b.HasOne("maintenance_buddy_api.domain.ActionTemplate", null)
                        .WithMany("Actions")
                        .HasForeignKey("ActionTemplateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("maintenance_buddy_api.domain.ActionTemplate", b =>
                {
                    b.Navigation("Actions");
                });

            modelBuilder.Entity("maintenance_buddy_api.domain.Vehicle", b =>
                {
                    b.Navigation("ActionTemplates");
                });
#pragma warning restore 612, 618
        }
    }
}
